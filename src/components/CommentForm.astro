---
interface Props {
  articleId: string;
  parentId?: string;
}
const { parentId, articleId } = Astro.props;
---

<form hx-post="/api/comment/create" hx-swap="afterbegin" hx-target="next .comment-target" class="flex gap-3">
  <div class="flex flex-col flex-1">
    <label for="body" class="block sr-only text-sm font-medium leading-6 text-gray-900">Write your comment</label>
    <input type="hidden" name="articleId" value={articleId} />
    <input type="hidden" name="parentId" value={parentId} />
    <textarea
      id="body"
      name="body"
      rows="3"
      required
      class="outline-none ring-2 rounded flex w-full ring-gray-400 p-2 focus:ring-blue-600 mb-4"></textarea>
    <div class="flex justify-end">
      <button
        class="submit-button rounded-md inline-block p-1.5 px-2 bg-blue-600 hover:bg-blue-500 text-white disabled:cursor-not-allowed disabled:bg-gray-600"
        type="submit"
      >
        Post comment
      </button>
    </div>
  </div>
</form>
<script>
  window.htmx?.on("htmx:beforeRequest", (event) => {
    const form = event.target;
    const hasCommentTargetClass = event.target.classList.contains("comment-target");
    if (hasCommentTargetClass) {
      const submitButton = form.querySelector(".submit-button") as HTMLButtonElement;
      document.querySelectorAll(".form-error").forEach((element) => {
        element.remove();
      });
      submitButton.disabled = true;
      submitButton.innerText = "Submitting...";
    }
  });
  window.htmx?.on("htmx:afterRequest", (event) => {
    const form = event.target;
    const hasCommentTargetClass = event.target.classList.contains("comment-target");

    if (hasCommentTargetClass) {
      form.reset();
      const submitButton = form.querySelector(".submit-button") as HTMLButtonElement;
      submitButton.disabled = false;
      submitButton.innerText = "Post comment";
    }
  });
</script>
