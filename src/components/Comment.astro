---
import type { SingleComment } from "~/types";
import Avatar from "~/components/Avatar.astro";
import CommentForm from "~/components/forms/CommentForm.astro";
import PleaseLogin from "~/components/PleaseLogin.astro";
import { Icon } from "astro-icon/components";
import dayjs from "dayjs";

interface Props {
  comments?: SingleComment[];
  comment: SingleComment;
  isFirst?: boolean;
  articleId: string;
  nested?: boolean;
  haveUser?: boolean;
}
const { comments, comment, isFirst, articleId, nested, haveUser } = Astro.props;
const children = comments?.filter((child) => child.parentId === comment.id);
const formattedDate = dayjs(comment.createdAt).format("MMM. D, YYYY");
const user = Astro.locals.user || haveUser;
---

<article id={comment.id} class:list={["comment", { "pt-6": !isFirst, "ml-6": nested }]}>
  <div class="comment-content">
    <header class="flex justify-between items-center mb-2">
      <div class="flex items-center">
        <p class="inline-flex items-center mr-3 text-sm text-gray-900 font-semibold">
          <Avatar name={comment.name} />{comment.name}
        </p>
        <p class="text-sm text-gray-600">
          <time datetime={new Date(comment.createdAt).toISOString()} title={formattedDate}>{formattedDate}</time>
        </p>
      </div>
      <button
        id="dropdownComment1Button"
        class="inline-flex items-center p-2 font-medium text-center text-gray-500 bg-white rounded-lg hover:bg-gray-100 focus:ring-2 focus:outline-none focus:ring-blue-200"
        type="button"
      >
        <Icon class="text-lg" name="ellipsis" />
        <span class="sr-only">Comment settings</span>
      </button>
    </header>
    <p class="text-gray-600">{comment.body}</p>
    <div class="reply-comment" x-data="{ open: false }">
      <button x-on:click="open = ! open" class="flex items-center text-gray-600 hover:underline font-medium mt-1">
        <Icon name="message" />
        <span class="ml-1 text-sm">Reply</span>
      </button>
      <!-- <button @click="$store.commentState.toggle()">Increment</button> -->
      <div x-show="open" x-cloak class="mt-2">
        {user ? <CommentForm parentId={comment.id} articleId={articleId} /> : <PleaseLogin />}
      </div>
    </div>
    <div class="comment-target"></div>
  </div>
  {
    children && children.length > 0 && (
      <ol class="comment-replies ml-6">
        {children.map((child) => (
          <li>
            <Astro.self comment={child} articleId={articleId} comments={comments} />
          </li>
        ))}
      </ol>
    )
  }
</article>
